[{"/Users/agosh/Documents/bookme-client/src/index.js":"1","/Users/agosh/Documents/bookme-client/src/App.js":"2","/Users/agosh/Documents/bookme-client/src/pages/AllPages.js":"3","/Users/agosh/Documents/bookme-client/src/data/context.js":"4","/Users/agosh/Documents/bookme-client/src/pages/Login.js":"5","/Users/agosh/Documents/bookme-client/src/pages/Rooms.js":"6","/Users/agosh/Documents/bookme-client/src/pages/SignUp.js":"7"},{"size":221,"mtime":1617953080542,"results":"8","hashOfConfig":"9"},{"size":261,"mtime":1617953080542,"results":"10","hashOfConfig":"9"},{"size":589,"mtime":1617954742913,"results":"11","hashOfConfig":"9"},{"size":2160,"mtime":1617953080542,"results":"12","hashOfConfig":"9"},{"size":1491,"mtime":1617953870583,"results":"13","hashOfConfig":"9"},{"size":398,"mtime":1617953080543,"results":"14","hashOfConfig":"9"},{"size":1541,"mtime":1617955092201,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1oxmqgu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/agosh/Documents/bookme-client/src/index.js",[],["34","35"],"/Users/agosh/Documents/bookme-client/src/App.js",[],"/Users/agosh/Documents/bookme-client/src/pages/AllPages.js",[],"/Users/agosh/Documents/bookme-client/src/data/context.js",["36","37","38"],"import React, { useState, createContext } from \"react\";\n\nexport const UserContext = createContext();\n\nfunction UserContextProvider(props) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [roomNum, setRoomNum] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [successLogin, setSuccessLogin] = useState(\"\");\n\n  const LoginData = {\n    username: email,\n    password: password,\n  };\n\n  const GetToken = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(LoginData),\n      redirect: \"follow\",\n    };\n\n    fetch(\"https://api.batborek.com/api/login2/\", requestOptions)\n      .then(async (response) => {\n        const data = await response.json();\n        setToken(data.token);\n        setUserId(data.id);\n        console.log(\"got token and id\");\n        setCurrentPage(2);\n        GetUser()\n      })\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const GetUser = () => {\n    var myHeaders = new Headers();\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://api.batborek.com/api/register/\".concat(userId)+'/', requestOptions)\n    .then(async (response) => {\n        const data = await response.json();\n        setName(data.name)\n        console.log(\"got name\");\n        \n\n      })\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const value = {\n    GetUser,\n    successLogin,\n    setSuccessLogin,\n    GetToken,\n    LoginData,\n    currentPage,\n    setCurrentPage,\n    email,\n    setEmail,\n    setPassword,\n    setToken,\n    setUserId,\n    password,\n    token,\n    userId,\n  };\n\n  return (\n    <UserContext.Provider value={value}>{props.children}</UserContext.Provider>\n  );\n}\n\nexport default UserContextProvider;\n","/Users/agosh/Documents/bookme-client/src/pages/Login.js",["39","40","41"],"import React, { useContext } from \"react\";\nimport { UserContext } from \"../data/context\";\n\nexport const Login = () => {\n  const {\n    successLogin,\n    setSuccessLogin,\n    GetToken,\n    setCurrentPage,\n    email,\n    setEmail,\n    setPassword,\n    password,\n    token,\n  } = useContext(UserContext);\n\n  return (\n    <>\n      <div className=\"myForm\">\n        <div className=\"item\">\n          {/* <h2>{t(\"Login.2\")}</h2> */}\n          <input\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            className=\"text-input\"\n            placeholder=\"email\"\n          />\n\n          <div className=\"passShow\"></div>\n          <input\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            // onKeyUp={validatePassword}\n            className=\"password-input\"\n            placeholder=\"password\"\n          />\n\n          <button\n            type=\"button\"\n            className=\"forwardButton\"\n            disabled={false}\n            onClick={() => {\n              GetToken();\n            }}\n          >\n            <b>Login</b>\n          </button>\n          <h3>\n            Dont have an account? <br />\n            <button>\n              onClick={() => {setCurrentPage(5)}}</button>\n          </h3>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/agosh/Documents/bookme-client/src/pages/Rooms.js",["42","43"],"import React, { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../data/context\";\n\nexport const Rooms = () => {\n  const { name } = useContext(UserContext);\n\n  return (\n    <>\n      Select a room\n      <div className=\"Rooms\">\n        <div className=\"Room\" onClick>Single Room</div>\n        <div className=\"Room\">King Size</div>\n      </div>\n    </>\n  );\n};\n\n\nexport default Rooms;","/Users/agosh/Documents/bookme-client/src/pages/SignUp.js",["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":11,"column":10,"nodeType":"52","messageId":"53","endLine":11,"endColumn":17},{"ruleId":"50","severity":1,"message":"55","line":11,"column":19,"nodeType":"52","messageId":"53","endLine":11,"endColumn":29},{"ruleId":"50","severity":1,"message":"56","line":6,"column":5,"nodeType":"52","messageId":"53","endLine":6,"endColumn":17},{"ruleId":"50","severity":1,"message":"57","line":7,"column":5,"nodeType":"52","messageId":"53","endLine":7,"endColumn":20},{"ruleId":"50","severity":1,"message":"58","line":14,"column":5,"nodeType":"52","messageId":"53","endLine":14,"endColumn":10},{"ruleId":"50","severity":1,"message":"59","line":1,"column":29,"nodeType":"52","messageId":"53","endLine":1,"endColumn":38},{"ruleId":"50","severity":1,"message":"51","line":5,"column":11,"nodeType":"52","messageId":"53","endLine":5,"endColumn":15},{"ruleId":"50","severity":1,"message":"60","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":27},{"ruleId":"50","severity":1,"message":"61","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":21},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'roomNum' is assigned a value but never used.","'setRoomNum' is assigned a value but never used.","'successLogin' is assigned a value but never used.","'setSuccessLogin' is assigned a value but never used.","'token' is assigned a value but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation"]