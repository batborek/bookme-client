{"ast":null,"code":"var _jsxFileName = \"/Users/yagmyrov/Dev/batborek/client/bookme-client/src/data/context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nfunction UserContextProvider(props) {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [roomNum, setRoomNum] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [successLogin, setSuccessLogin] = useState(\"\");\n  const LoginData = {\n    username: email,\n    password: password\n  };\n\n  const GetToken = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(LoginData),\n      redirect: \"follow\"\n    };\n    fetch(\"https://api.batborek.com/api/login2/\", requestOptions).then(async response => {\n      const data = await response.json();\n      setToken(data.token);\n      setUserId(data.id);\n      console.log(\"got token and id\");\n    }).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n  };\n\n  const value = {\n    successLogin,\n    setSuccessLogin,\n    GetToken,\n    LoginData,\n    currentPage,\n    setCurrentPage,\n    email,\n    setEmail,\n    setPassword,\n    setToken,\n    setUserId,\n    password,\n    token,\n    userId\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserContextProvider, \"GtfL5hB8rR3xfMSL3TC5ARsQoW4=\");\n\n_c = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["/Users/yagmyrov/Dev/batborek/client/bookme-client/src/data/context.js"],"names":["React","useState","createContext","UserContext","UserContextProvider","props","currentPage","setCurrentPage","email","setEmail","password","setPassword","name","setName","token","setToken","roomNum","setRoomNum","userId","setUserId","successLogin","setSuccessLogin","LoginData","username","GetToken","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","then","response","data","json","id","console","log","result","catch","error","value","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;;AAEP,SAASE,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMqB,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAEf,KADM;AAEhBE,IAAAA,QAAQ,EAAEA;AAFM,GAAlB;;AAKA,QAAMc,QAAQ,GAAG,MAAM;AACrB,QAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEA,QAAIC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAEL,SAFU;AAGnBM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,SAAf,CAHa;AAInBY,MAAAA,QAAQ,EAAE;AAJS,KAArB;AAOAC,IAAAA,KAAK,CAAC,sCAAD,EAAyCP,cAAzC,CAAL,CACGQ,IADH,CACQ,MAAOC,QAAP,IAAoB;AACxB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACAxB,MAAAA,QAAQ,CAACuB,IAAI,CAACxB,KAAN,CAAR;AACAK,MAAAA,SAAS,CAACmB,IAAI,CAACE,EAAN,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KANH,EAOGN,IAPH,CAOSO,MAAD,IAAYF,OAAO,CAACC,GAAR,CAAYC,MAAZ,CAPpB,EAQGC,KARH,CAQUC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB,CARpB;AASD,GApBD;;AAsBA,QAAMC,KAAK,GAAG;AACV1B,IAAAA,YADU;AAEVC,IAAAA,eAFU;AAGZG,IAAAA,QAHY;AAIZF,IAAAA,SAJY;AAKZhB,IAAAA,WALY;AAMZC,IAAAA,cANY;AAOZC,IAAAA,KAPY;AAQZC,IAAAA,QARY;AASZE,IAAAA,WATY;AAUZI,IAAAA,QAVY;AAWZI,IAAAA,SAXY;AAYZT,IAAAA,QAZY;AAaZI,IAAAA,KAbY;AAcZI,IAAAA;AAdY,GAAd;AAiBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE4B,KAA7B;AAAA,cAAqCzC,KAAK,CAAC0C;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAzDQ3C,mB;;KAAAA,mB;AA2DT,eAAeA,mBAAf","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const UserContext = createContext();\n\nfunction UserContextProvider(props) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [roomNum, setRoomNum] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [successLogin, setSuccessLogin] = useState(\"\");\n\n  const LoginData = {\n    username: email,\n    password: password,\n  };\n\n  const GetToken = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: JSON.stringify(LoginData),\n      redirect: \"follow\",\n    };\n\n    fetch(\"https://api.batborek.com/api/login2/\", requestOptions)\n      .then(async (response) => {\n        const data = await response.json();\n        setToken(data.token);\n        setUserId(data.id);\n        console.log(\"got token and id\");\n      })\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  const value = {\n      successLogin,\n      setSuccessLogin,\n    GetToken,\n    LoginData,\n    currentPage,\n    setCurrentPage,\n    email,\n    setEmail,\n    setPassword,\n    setToken,\n    setUserId,\n    password,\n    token,\n    userId,\n  };\n\n  return (\n    <UserContext.Provider value={value}>{props.children}</UserContext.Provider>\n  );\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}